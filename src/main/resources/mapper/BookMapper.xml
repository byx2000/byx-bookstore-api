<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="byx.web.bookstore.mapper.BookMapper">

    <!--select从句-->
    <sql id="selectClause">
        SELECT id, name, author, description, score, heat, updateTime, likeCount, dislikeCount, wordCount
    </sql>

    <!--where从句-->
    <sql id="whereClause">
        <where>
            <if test="categoryId != null &amp;&amp; categoryId != -1">AND categoryId = #{categoryId}</if>
            <if test="scoreRange != null">
                <if test="scoreRange.min != null">AND score >= #{scoreRange.min}</if>
                <if test="scoreRange.max != null">AND score &lt;= #{scoreRange.max}</if>
            </if>
            <if test="heatRange != null">
                <if test="heatRange.min != null">AND heat >= #{heatRange.min}</if>
                <if test="heatRange.max != null">AND heat &lt;= #{heatRange.max}</if>
            </if>
            <if test="updateAfter != null">AND (julianday('now') - julianday(updateTime)) &lt;= #{updateAfter}</if>
        </where>
    </sql>

    <!--order从句-->
    <sql id="orderClause">
        <if test="orderBy != null">
            ORDER BY
            <choose>
                <when test="orderBy == 'score'">score</when>
                <when test="orderBy == 'heat'">heat</when>
                <when test="orderBy == 'likeCount'">likeCount</when>
                <when test="orderBy == 'wordCount'">wordCount</when>
                <otherwise>
                    RANDOM()
                </otherwise>
            </choose>
            <if test="orderType != null">
                <choose>
                    <when test="orderType == 'desc'">DESC</when>
                    <otherwise>ASC</otherwise>
                </choose>
            </if>
        </if>
    </sql>

    <!--limit从句-->
    <sql id="limitClause">
        <if test="limit != null">
            LIMIT #{limit}
            <if test="offset != null">OFFSET #{offset}</if>
        </if>
    </sql>

    <select id="listByRecommendQuery" resultType="BookPO">
        <include refid="selectClause"/>
        FROM books
        <if test="categoryId != null">
            WHERE categoryId = #{categoryId}
        </if>
        ORDER BY RANDOM()
        LIMIT #{count}
    </select>

    <select id="listByClassificationQuery" resultType="BookPO">
        <include refid="selectClause"/>
        FROM books
        <include refid="whereClause"/>
        <include refid="orderClause"/>
        <include refid="limitClause"/>
    </select>

    <select id="countByClassificationQuery" resultType="int">
        SELECT COUNT(*) FROM books
        <include refid="whereClause"/>
    </select>

    <select id="listRank" resultType="BookPO">
        <include refid="selectClause"/>
        FROM books
        <if test="categoryId != null">
            WHERE categoryId = #{categoryId}
        </if>
        ORDER BY
        <choose>
            <when test="type == 'updateTime'">updateTime DESC</when>
            <when test="type == 'score'">score DESC</when>
            <otherwise>heat DESC</otherwise>
        </choose>
        LIMIT #{count}
    </select>

    <select id="listByKeywordSearch" resultType="BookPO">
        <include refid="selectClause"/>
        FROM books
        WHERE name LIKE '%${keyword}%' OR author LIKE '%${keyword}%' OR description LIKE '%${keyword}%'
        <include refid="orderClause"/>
        <include refid="limitClause"/>
    </select>

    <select id="countByKeywordSearch" resultType="int">
        SELECT COUNT(*) FROM books
        WHERE name LIKE '%${keyword}%' OR author LIKE '%${keyword}%' OR description LIKE '%${keyword}%'
    </select>

    <select id="getById" resultType="BookPO">
        <include refid="selectClause"/>
        FROM books
        WHERE id = #{bookId}
    </select>

    <update id="increaseLikeCount">
        UPDATE books
        SET likeCount = likeCount + 1
        WHERE id = #{bookId}
    </update>

    <update id="decreaseLikeCount">
        UPDATE books
        SET likeCount = likeCount - 1
        WHERE id = #{bookId}
    </update>

    <update id="increaseDislikeCount">
        UPDATE books
        SET dislikeCount = dislikeCount + 1
        WHERE id = #{bookId}
    </update>

    <update id="decreaseDislikeCount">
        UPDATE books
        SET dislikeCount = dislikeCount - 1
        WHERE id = #{bookId}
    </update>

</mapper>